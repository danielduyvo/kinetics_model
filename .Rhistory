points = read.csv("output.csv", header=FALSE)
png("iM.png")
plot(points$V1, points$V2, xlab="time (seconds)", ylab="iM (M)")
dev.off()
png("iM.png")
plot(points$V1, points$V2, xlab="time (seconds)", ylab="iM (M)")
dev.off()
png("aM.png")
plot(points$V1, points$V3, xlab="time (seconds)", ylab="aM (M)")
dev.off()
png("a1.png")
plot(points$V1, points$V4, xlab="time (seconds)", ylab="A1 (M)")
dev.off()
png("monomers.png")
plot(points$V1, points$V2, xlab="time (seconds)", ylab="iM (M)", col="red")
point(points$V1, points$V3, col="green")
dev.off()
q()
data = read.csv('output.csv', header=FALSE, sep=",")
head(data)
data = read.csv('output.csv', header=FALSE, sep=",")
head(data)
plot(data$V1, data$V2)
plot(data$V2, data$V1)
data = read.csv('output.csv', header=FALSE, sep=",")
plot(data$V2, data$V1)
plot(data$V2, data$V1)
plot(data$V1, data$V2)
data = read.csv('data.csv', header=FALSE, sep=",")
head(data)
plot(data$V1, data$V2)
pred = read.csv('output.csv', header=FALSE, sep=",")
points(pred$V1, pred$V2)
which.max(data$V1)
data[495,]
plot(data$V1, data$V2/data[495,"V2"])
tail(data)
tail(pred)
points(pred$V1, pred$V2/pred[1000,"V2"])
q()
output = read.csv('output.csv', header=FALSE)
head(output)
data = read.csv('data.csv', header=FALSE)
head(data)
plot(data$V2, data$V1)
plot(data$V1, data$V2)
plot(data$V1, data$V2)
lines(output$V1, output$V2)
length(output$V1)
length(data$V1)
plot(data$V1, data$V2/data$V1[495])
lines(output$V1, output$V2/output$V2[1000])
plot(data$V1, data$V2/data$V2[495])
lines(output$V1, output$V2/output$V2[1000])
png('fit.png')
plot(data$V1, data$V2/data$V2[495])
lines(output$V1, output$V2/output$V2[1000])
dev.off()
q()
ten = read.csv('real_data/10micro.csv', header=FALSE)
head(ten)
normalize(ten$V2, method="range")
str(ten)
nrow(ten)
normalize = function(data) {
rows = nrows(data);
max = data[rows, 'V2']
data$V2 = data$V2/max;
return(data)
}
head(normalize(ten))
normalize = function(data) {
rows = norwo(data);
max = data[rows, 'V2'];
data$V2 = data$V2/max;
return(data);
}
head(normalize(ten))
normalize = function(data) {
rows = nrow(data);
max = data[rows, 'V2'];
data$V2 = data$V2/max;
return(data);
}
head(normalize(ten))
data[285,:]
data[285,]
normalize(ten)[285,]
plot(ten)
ten[285,]
ten[485,[
ten[485,]
normalize(ten)[485,]
normalize(ten)[1,]
twenty = read.csv('real_data/20micro.csv', header=FALSE)
plot(twenty)
normalize(twenty)
thirty = read.csv('real_data/30micro.csv', header=FALSE)
plot(thirty)
forty = read.csv('real_data/40micro.csv', header=FALSE)
plot(forty)
p_ten = read.csv('cpp/0ouput.txt', header=FALSE)
plot(p_ten)
p_twenty = read.csv('cpp/1ouput.txt', header=FALSE)
plot(p_twenty)
plot(p_twenty)
plot(twenty)
lines(p_twenty)
plot(normalize(p_twenty))
plot(normalize(twenty))
lines(normalize(p_twenty))
p_thirty = read.csv('cpp/2output.txt', header=FALSE)
p_thirty = read.csv('cpp/2ouput.txt', header=FALSE)
points(normalize(thirty), col="red")
lines(normalize(p_thirty), col="red")
lines(normalize(p_thirty), col="red")
lines(normalize(p_ten))
plot(normalize(p_thirty))
plot(head(p_thirty, 100))
plot(head(p_thirty, 10))
p_ten = read.csv('cpp/0ouput.txt', header=FALSE)

p_twenty = read.csv('cpp/1ouput.txt', header=FALSE)
plot(p_twenty)
plot(p_twenty)
points(p_ten)
plot(normalize(p_twenty))
lines(normalize(p_ten))
head(nomralize(p_ten))
head(normalize(p_ten))
head(normalize(p_twenty))
